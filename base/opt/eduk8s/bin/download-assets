#!/bin/bash

set -eo pipefail
set -x

mkdir -p /opt/assets

cd /opt/assets

# For assets can be multiple vendor files as we need to separate contents into
# separate files so can have overlapping target directories.

for fullpath in /opt/eduk8s/config/vendir-assets-*.yaml; do
    file=`basename $fullpath`

    if [ ! -f $file ]; then
        cp $fullpath $file
    fi

    VENDIR_ARGS=""

    if [ -d /opt/secrets ]; then
        # In this case we are running in the init container and we need to
        # include the mounted secrets from the workshop environment. These
        # secrets hold any credentials which are referenced from the vendir
        # config resource.

        for f in /opt/secrets/*.yaml; do
            VENDIR_ARGS="$VENDIR_ARGS -f $f"
        done
    fi

    # Download the workshop content files using vendir.

    lockfile=`basename $file .yaml`.lock.yaml

    time vendir sync -f $file --lock-file $lockfile $VENDIR_ARGS
done

# When using imgpkg push/pull, it does not preserve permissions for groups and
# other and instead only keeps user permissions. This will break workshops where
# files are being used with docker builds and things will only work where
# original permissions exist. To try and avoid problems, if we see that only
# owner permissions exist, copy those to group and others. There is still a risk
# that a source file may not have actually had group or other permissions and so
# that is desired, but not likely and nothing else that can be done. Also note
# that we don't fail if there are problems. In particular, if a volume mount was
# used to add files, the directories will not be writable so we want to avoid a
# hard failure in that case.

chmod -R go=u-w * || true
