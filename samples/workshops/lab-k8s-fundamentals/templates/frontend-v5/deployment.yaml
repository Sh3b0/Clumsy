#@ load("@ytt:data", "data")

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: blog
  labels:
    app: blog
spec:
  replicas: 2
  selector:
    matchLabels:
      app: blog
  template:
    metadata:
      labels:
        app: blog
    spec:
      securityContext:
        runAsUser: 1001
        fsGroup: 1
        supplementalGroups: [1]
      affinity:
        podAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - topologyKey: kubernetes.io/hostname
            labelSelector:
              matchExpressions:
              - key: app
                operator: In
                values:
                - blog
      containers:
      - name: blog
        image: ghcr.io/educates/lab-k8s-fundamentals-frontend:3.0
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop: ["ALL"]
          runAsNonRoot: true
          #@ if data.values.POLICY_ENGINE in ["pod-security-standards", "kyverno"]:
          seccompProfile:
            type: RuntimeDefault
          #@ end
        ports:
        - containerPort: 8080
        env:
        - name: DATABASE_HOST
          value: blog-db
        - name: DATABASE_USER
          valueFrom:
            secretKeyRef:
              key: database-user
              name: blog-credentials
        - name: DATABASE_PASSWORD
          valueFrom:
            secretKeyRef:
              key: database-password
              name: blog-credentials
        - name: DATABASE_NAME
          valueFrom:
            secretKeyRef:
              key: database-name
              name: blog-credentials
        volumeMounts:
        - name: media
          mountPath: "/opt/app-root/media"
      volumes:
      - name: media
        persistentVolumeClaim:
          claimName: blog-media
